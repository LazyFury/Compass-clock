{"version":3,"sources":["server.js","App.js","serviceWorker.js","index.js"],"names":["axios","defaults","headers","post","crossDomain","withCredentials","http","get","url","Promise","resolve","Content-Type","then","res","App","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","array","length","Array","from","map","v","k","x","addPreZero","num","state","year","M_month","month","day","week","hour","Minute","second","Zodiac","split","M_months","_this2","setInterval","time","Date","setState","getUTCFullYear","getUTCMonth","getMonth","getDate","getDay","getHours","getMinutes","getSeconds","console","log","concat","getFullYear","jixiong","JSON","parse","data","replace","_this3","react_default","a","createElement","className","undefined","html","suici","dao","yi","ji","chong","cai","xi","fu","index","key","style","transform","Component","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.4f496d19.chunk.js","sourcesContent":["import axios from 'axios'\r\nlet get\r\nlet post\r\n// http://www.nongli.cn/rili/api\r\n// axios.defaults.baseURL = '/api'\r\naxios.defaults.headers.post['Content-Type'] = 'application/json';\r\naxios.defaults.crossDomain=true\r\naxios.defaults.withCredentials=true\r\n\r\nconst http={\r\n    get,\r\n    post\r\n}\r\nhttp.get=(url)=>{\r\n    return new Promise(resolve=>{\r\n        axios.get(url,{headers: {'Content-Type': 'application/x-www-form-urlencoded'}}).then((res)=>resolve(res))\r\n    })\r\n}\r\n\r\nexport default http;","import React, { Component } from 'react';\n// import logo from './logo.svg';\nimport http from './server'\nimport './App.css';\n\nclass App extends Component {\n  constructor(){\n    super()\n    this.state=({\n      year:2019,\n      M_month:'Mar',\n      month:1,\n      day:1,\n      week:1,\n      hour:12,\n      Minute:1,\n      second:1,\n      Zodiac:'申猴、酉鸡、戌狗、亥猪、子鼠、丑牛、寅虎、卯兔、辰龙、巳蛇、午马、未羊'.split('、'),\n      M_months:[\"Jan\",\"Feb\",\"Mar\",\"Apr\",\"May\",\"Jun\",\"Jul\",\"Aug\",\"Spt\",\"Oct\",\"Nov\",\"Dec\"],\n    })\n  }\n\n componentWillMount(){\n   setInterval(()=>{\n     let time= new Date()\n     this.setState({\n      year:this.state.Zodiac[time.getUTCFullYear()%12],\n      M_month:this.state.M_months[time.getUTCMonth()],\n      month:time.getMonth()+1,\n      day:time.getDate(),\n      week:time.getDay(),\n      hour:time.getHours(),\n      Minute:time.getMinutes(),\n      second:time.getSeconds()\n     })\n   },1000)\n   let time= new Date()\n   console.log(http.get(`/app/god/${time.getFullYear()}/${this.addPreZero(time.getMonth()+1)}/${time.getFullYear()+this.addPreZero(time.getMonth()+1)+this.addPreZero(time.getDate())}.js`).then(res=>{\n    //  console.log(res.data.replace(/(\\w+):/g,`\"$1\":`))\n     this.setState({\n       jixiong:JSON.parse(res.data.replace(/(\\w+):/g,`\"$1\":`).replace(/&nbsp;/g,\"\"))\n     },()=>{\n       console.log(this.state.jixiong)\n     })\n   }))\n }\n  array = length => Array.from({length}).map((v, k) => k).map(x=>x+1);\n  addPreZero = num =>{\n    if(num>=10)return num\n    return '0'+num\n  }\n\n\n  render() {\n    return (\n      <div className=\"App\">\n        <header className=\"App-header\">\n          <div className='msg'>\n            <div  className='year'>\n            <span>\n            {this.state.year}</span>/年\n            </div>\n            {this.state.jixiong!==undefined && <div>\n                  <div>岁次: {this.state.jixiong.html.suici}</div>\n                  <div>黄道吉日:{this.state.jixiong.html.dao}</div>\n                  <div>\n                    <span>宜: {this.state.jixiong.html.yi}</span> <br></br>\n                    <span>忌: {this.state.jixiong.html.ji}</span> <br></br>\n                    <span>冲: {this.state.jixiong.html.chong}</span> <br></br>\n                  </div>\n                  <div>\n                  <span>财神: {this.state.jixiong.html.cai}</span> <br></br>\n                    <span>喜神: {this.state.jixiong.html.xi}</span> <br></br>\n                    <span>福神: {this.state.jixiong.html.fu}</span> <br></br>\n                  </div>\n            </div>}\n          </div>\n          <div className='M_month'>\n          {`${this.state.M_month}`}\n          </div>\n          <div className='box'>\n\n           \n\n            {this.array(12).map((x,index)=>{\n              return (\n                <div key={index} className={`month item ${index===(this.state.month-1)?\"active\":\"\"}`} style={{transform: `rotate(${index*30-30*(this.state.month-1)}deg)`}}>\n                  {`${x}月`}\n                </div>\n              )\n            })}\n\n            {this.array(30).map((x,index)=>{\n              return (\n                <div key={index} className={`day item ${index===(this.state.day-1)?\"active\":\"\"}`} style={{transform: `rotate(${index*12-12*(this.state.day-1)}deg)`}}>\n                  {`${x}日`}\n                </div>\n              )\n            })}\n\n            {this.array(7).map((x,index)=>{\n              return (\n                <div key={index} \n                className={`week item ${index===(this.state.week-1)?\"active\":\"\"}`} \n                style={{transform: `rotate(${index*(360/21)-(360/21)*(this.state.week-1)}deg)`}}>\n                  {`星期${x}`}\n                </div>\n              )\n            })}\n\n            {this.array(24).map((x,index)=>{\n              return (\n                <div key={index} \n                className={`hour item ${index===(this.state.hour-1)?\"active\":\"\"}`} \n                style={{transform: `rotate(${index*(360/24)-(360/24)*(this.state.hour-1)}deg)`}}>\n                  {`${x}点`}\n                </div>\n              )\n            })}\n\n            {this.array(60).map((x,index)=>{\n              return (\n                <div key={index} \n                className={`Minute item ${index===(this.state.Minute-1)?\"active\":\"\"}`} \n                style={{transform: `rotate(${index*(360/60)-(360/60)*(this.state.Minute-1)}deg)`}}>\n                  {`${x}分`}\n                </div>\n              )\n            })}\n\n            {this.array(60).map((x,index)=>{\n              return (\n                <div key={index} \n                className={`second item ${index===(this.state.second-1)?\"active\":\"\"}`} \n                style={{transform: `rotate(${index*(360/60)-(360/60)*(this.state.second-1)}deg)`}}>\n                  {`${x}秒`}\n                </div>\n              )\n            })}\n          </div>\n        </header>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}